;; ==========================================================
;; Class accessors
;; Bigloo (4.5a)
;; Inria -- Sophia Antipolis     Fri 04 Nov 2022 11:40:21 AM CET 
;; (bigloo.new -classgen Cfa/cinfo2.scm)
;; ==========================================================

;; The directives
(directives

;; pre-arithmetic-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-arithmetic-app::pre-arithmetic-app loc1693::obj type1694::type side-effect1695::obj key1696::obj fun1697::var args1698::obj stackable1699::obj spec-types1700::pair)
    (inline pre-arithmetic-app?::bool ::obj)
    (pre-arithmetic-app-nil::pre-arithmetic-app)
    (inline pre-arithmetic-app-spec-types::pair ::pre-arithmetic-app)
    (inline pre-arithmetic-app-stackable::obj ::pre-arithmetic-app)
    (inline pre-arithmetic-app-stackable-set! ::pre-arithmetic-app ::obj)
    (inline pre-arithmetic-app-args::obj ::pre-arithmetic-app)
    (inline pre-arithmetic-app-args-set! ::pre-arithmetic-app ::obj)
    (inline pre-arithmetic-app-fun::var ::pre-arithmetic-app)
    (inline pre-arithmetic-app-fun-set! ::pre-arithmetic-app ::var)
    (inline pre-arithmetic-app-key::obj ::pre-arithmetic-app)
    (inline pre-arithmetic-app-key-set! ::pre-arithmetic-app ::obj)
    (inline pre-arithmetic-app-side-effect::obj ::pre-arithmetic-app)
    (inline pre-arithmetic-app-side-effect-set! ::pre-arithmetic-app ::obj)
    (inline pre-arithmetic-app-type::type ::pre-arithmetic-app)
    (inline pre-arithmetic-app-type-set! ::pre-arithmetic-app ::type)
    (inline pre-arithmetic-app-loc::obj ::pre-arithmetic-app))))

;; arithmetic-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-arithmetic-app::arithmetic-app loc1683::obj type1684::type side-effect1685::obj key1686::obj fun1687::var args1688::obj stackable1689::obj approx1690::approx spec-types1691::pair)
    (inline arithmetic-app?::bool ::obj)
    (arithmetic-app-nil::arithmetic-app)
    (inline arithmetic-app-spec-types::pair ::arithmetic-app)
    (inline arithmetic-app-approx::approx ::arithmetic-app)
    (inline arithmetic-app-stackable::obj ::arithmetic-app)
    (inline arithmetic-app-stackable-set! ::arithmetic-app ::obj)
    (inline arithmetic-app-args::obj ::arithmetic-app)
    (inline arithmetic-app-args-set! ::arithmetic-app ::obj)
    (inline arithmetic-app-fun::var ::arithmetic-app)
    (inline arithmetic-app-fun-set! ::arithmetic-app ::var)
    (inline arithmetic-app-key::obj ::arithmetic-app)
    (inline arithmetic-app-key-set! ::arithmetic-app ::obj)
    (inline arithmetic-app-side-effect::obj ::arithmetic-app)
    (inline arithmetic-app-side-effect-set! ::arithmetic-app ::obj)
    (inline arithmetic-app-type::type ::arithmetic-app)
    (inline arithmetic-app-type-set! ::arithmetic-app ::type)
    (inline arithmetic-app-loc::obj ::arithmetic-app))))

;; pre-make-procedure-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-make-procedure-app::pre-make-procedure-app loc1674::obj type1675::type side-effect1676::obj key1677::obj fun1678::var args1679::obj stackable1680::obj owner1681::variable)
    (inline pre-make-procedure-app?::bool ::obj)
    (pre-make-procedure-app-nil::pre-make-procedure-app)
    (inline pre-make-procedure-app-owner::variable ::pre-make-procedure-app)
    (inline pre-make-procedure-app-stackable::obj ::pre-make-procedure-app)
    (inline pre-make-procedure-app-stackable-set! ::pre-make-procedure-app ::obj)
    (inline pre-make-procedure-app-args::obj ::pre-make-procedure-app)
    (inline pre-make-procedure-app-args-set! ::pre-make-procedure-app ::obj)
    (inline pre-make-procedure-app-fun::var ::pre-make-procedure-app)
    (inline pre-make-procedure-app-fun-set! ::pre-make-procedure-app ::var)
    (inline pre-make-procedure-app-key::obj ::pre-make-procedure-app)
    (inline pre-make-procedure-app-key-set! ::pre-make-procedure-app ::obj)
    (inline pre-make-procedure-app-side-effect::obj ::pre-make-procedure-app)
    (inline pre-make-procedure-app-side-effect-set! ::pre-make-procedure-app ::obj)
    (inline pre-make-procedure-app-type::type ::pre-make-procedure-app)
    (inline pre-make-procedure-app-type-set! ::pre-make-procedure-app ::type)
    (inline pre-make-procedure-app-loc::obj ::pre-make-procedure-app))))

;; pre-procedure-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-procedure-ref-app::pre-procedure-ref-app loc1666::obj type1667::type side-effect1668::obj key1669::obj fun1670::var args1671::obj stackable1672::obj)
    (inline pre-procedure-ref-app?::bool ::obj)
    (pre-procedure-ref-app-nil::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-stackable::obj ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-stackable-set! ::pre-procedure-ref-app ::obj)
    (inline pre-procedure-ref-app-args::obj ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-args-set! ::pre-procedure-ref-app ::obj)
    (inline pre-procedure-ref-app-fun::var ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-fun-set! ::pre-procedure-ref-app ::var)
    (inline pre-procedure-ref-app-key::obj ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-key-set! ::pre-procedure-ref-app ::obj)
    (inline pre-procedure-ref-app-side-effect::obj ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-side-effect-set! ::pre-procedure-ref-app ::obj)
    (inline pre-procedure-ref-app-type::type ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-type-set! ::pre-procedure-ref-app ::type)
    (inline pre-procedure-ref-app-loc::obj ::pre-procedure-ref-app))))

;; pre-procedure-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-procedure-set!-app::pre-procedure-set!-app loc1657::obj type1658::type side-effect1659::obj key1660::obj fun1662::var args1663::obj stackable1664::obj)
    (inline pre-procedure-set!-app?::bool ::obj)
    (pre-procedure-set!-app-nil::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-stackable::obj ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-stackable-set! ::pre-procedure-set!-app ::obj)
    (inline pre-procedure-set!-app-args::obj ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-args-set! ::pre-procedure-set!-app ::obj)
    (inline pre-procedure-set!-app-fun::var ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-fun-set! ::pre-procedure-set!-app ::var)
    (inline pre-procedure-set!-app-key::obj ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-key-set! ::pre-procedure-set!-app ::obj)
    (inline pre-procedure-set!-app-side-effect::obj ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-side-effect-set! ::pre-procedure-set!-app ::obj)
    (inline pre-procedure-set!-app-type::type ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-type-set! ::pre-procedure-set!-app ::type)
    (inline pre-procedure-set!-app-loc::obj ::pre-procedure-set!-app))))

;; make-procedure-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-make-procedure-app::make-procedure-app loc1641::obj type1642::type side-effect1643::obj key1644::obj fun1645::var args1646::obj stackable1647::obj approx1648::approx values-approx1649::vector lost-stamp1650::long X-T?1651::bool X1652::bool T1653::bool owner1654::variable stack-stamp1655::obj)
    (inline make-procedure-app?::bool ::obj)
    (make-procedure-app-nil::make-procedure-app)
    (inline make-procedure-app-stack-stamp::obj ::make-procedure-app)
    (inline make-procedure-app-stack-stamp-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-owner::variable ::make-procedure-app)
    (inline make-procedure-app-T::bool ::make-procedure-app)
    (inline make-procedure-app-T-set! ::make-procedure-app ::bool)
    (inline make-procedure-app-X::bool ::make-procedure-app)
    (inline make-procedure-app-X-set! ::make-procedure-app ::bool)
    (inline make-procedure-app-X-T?::bool ::make-procedure-app)
    (inline make-procedure-app-X-T?-set! ::make-procedure-app ::bool)
    (inline make-procedure-app-lost-stamp::long ::make-procedure-app)
    (inline make-procedure-app-lost-stamp-set! ::make-procedure-app ::long)
    (inline make-procedure-app-values-approx::vector ::make-procedure-app)
    (inline make-procedure-app-values-approx-set! ::make-procedure-app ::vector)
    (inline make-procedure-app-approx::approx ::make-procedure-app)
    (inline make-procedure-app-approx-set! ::make-procedure-app ::approx)
    (inline make-procedure-app-stackable::obj ::make-procedure-app)
    (inline make-procedure-app-stackable-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-args::obj ::make-procedure-app)
    (inline make-procedure-app-args-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-fun::var ::make-procedure-app)
    (inline make-procedure-app-fun-set! ::make-procedure-app ::var)
    (inline make-procedure-app-key::obj ::make-procedure-app)
    (inline make-procedure-app-key-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-side-effect::obj ::make-procedure-app)
    (inline make-procedure-app-side-effect-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-type::type ::make-procedure-app)
    (inline make-procedure-app-type-set! ::make-procedure-app ::type)
    (inline make-procedure-app-loc::obj ::make-procedure-app))))

;; procedure-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-procedure-ref-app::procedure-ref-app loc1630::obj type1631::type side-effect1632::obj key1633::obj fun1634::var args1635::obj stackable1636::obj approx1638::approx)
    (inline procedure-ref-app?::bool ::obj)
    (procedure-ref-app-nil::procedure-ref-app)
    (inline procedure-ref-app-approx::approx ::procedure-ref-app)
    (inline procedure-ref-app-stackable::obj ::procedure-ref-app)
    (inline procedure-ref-app-stackable-set! ::procedure-ref-app ::obj)
    (inline procedure-ref-app-args::obj ::procedure-ref-app)
    (inline procedure-ref-app-args-set! ::procedure-ref-app ::obj)
    (inline procedure-ref-app-fun::var ::procedure-ref-app)
    (inline procedure-ref-app-fun-set! ::procedure-ref-app ::var)
    (inline procedure-ref-app-key::obj ::procedure-ref-app)
    (inline procedure-ref-app-key-set! ::procedure-ref-app ::obj)
    (inline procedure-ref-app-side-effect::obj ::procedure-ref-app)
    (inline procedure-ref-app-side-effect-set! ::procedure-ref-app ::obj)
    (inline procedure-ref-app-type::type ::procedure-ref-app)
    (inline procedure-ref-app-type-set! ::procedure-ref-app ::type)
    (inline procedure-ref-app-loc::obj ::procedure-ref-app))))

;; procedure-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-procedure-set!-app::procedure-set!-app loc1620::obj type1621::type side-effect1622::obj key1623::obj fun1624::var args1625::obj stackable1626::obj approx1627::approx vapprox1628::obj)
    (inline procedure-set!-app?::bool ::obj)
    (procedure-set!-app-nil::procedure-set!-app)
    (inline procedure-set!-app-vapprox::obj ::procedure-set!-app)
    (inline procedure-set!-app-vapprox-set! ::procedure-set!-app ::obj)
    (inline procedure-set!-app-approx::approx ::procedure-set!-app)
    (inline procedure-set!-app-stackable::obj ::procedure-set!-app)
    (inline procedure-set!-app-stackable-set! ::procedure-set!-app ::obj)
    (inline procedure-set!-app-args::obj ::procedure-set!-app)
    (inline procedure-set!-app-args-set! ::procedure-set!-app ::obj)
    (inline procedure-set!-app-fun::var ::procedure-set!-app)
    (inline procedure-set!-app-fun-set! ::procedure-set!-app ::var)
    (inline procedure-set!-app-key::obj ::procedure-set!-app)
    (inline procedure-set!-app-key-set! ::procedure-set!-app ::obj)
    (inline procedure-set!-app-side-effect::obj ::procedure-set!-app)
    (inline procedure-set!-app-side-effect-set! ::procedure-set!-app ::obj)
    (inline procedure-set!-app-type::type ::procedure-set!-app)
    (inline procedure-set!-app-type-set! ::procedure-set!-app ::type)
    (inline procedure-set!-app-loc::obj ::procedure-set!-app))))

;; pre-make-vector-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-make-vector-app::pre-make-vector-app loc1611::obj type1612::type side-effect1613::obj key1614::obj fun1615::var args1616::obj stackable1617::obj owner1618::variable)
    (inline pre-make-vector-app?::bool ::obj)
    (pre-make-vector-app-nil::pre-make-vector-app)
    (inline pre-make-vector-app-owner::variable ::pre-make-vector-app)
    (inline pre-make-vector-app-stackable::obj ::pre-make-vector-app)
    (inline pre-make-vector-app-stackable-set! ::pre-make-vector-app ::obj)
    (inline pre-make-vector-app-args::obj ::pre-make-vector-app)
    (inline pre-make-vector-app-args-set! ::pre-make-vector-app ::obj)
    (inline pre-make-vector-app-fun::var ::pre-make-vector-app)
    (inline pre-make-vector-app-fun-set! ::pre-make-vector-app ::var)
    (inline pre-make-vector-app-key::obj ::pre-make-vector-app)
    (inline pre-make-vector-app-key-set! ::pre-make-vector-app ::obj)
    (inline pre-make-vector-app-side-effect::obj ::pre-make-vector-app)
    (inline pre-make-vector-app-side-effect-set! ::pre-make-vector-app ::obj)
    (inline pre-make-vector-app-type::type ::pre-make-vector-app)
    (inline pre-make-vector-app-type-set! ::pre-make-vector-app ::type)
    (inline pre-make-vector-app-loc::obj ::pre-make-vector-app))))

;; make-vector-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-make-vector-app::make-vector-app loc1595::obj type1596::type side-effect1597::obj key1598::obj fun1599::var args1600::obj stackable1602::obj approx1603::approx value-approx1604::approx lost-stamp1605::long owner1606::variable stack-stamp1607::obj seen?1608::bool tvector?1609::bool)
    (inline make-vector-app?::bool ::obj)
    (make-vector-app-nil::make-vector-app)
    (inline make-vector-app-tvector?::bool ::make-vector-app)
    (inline make-vector-app-tvector?-set! ::make-vector-app ::bool)
    (inline make-vector-app-seen?::bool ::make-vector-app)
    (inline make-vector-app-seen?-set! ::make-vector-app ::bool)
    (inline make-vector-app-stack-stamp::obj ::make-vector-app)
    (inline make-vector-app-stack-stamp-set! ::make-vector-app ::obj)
    (inline make-vector-app-owner::variable ::make-vector-app)
    (inline make-vector-app-lost-stamp::long ::make-vector-app)
    (inline make-vector-app-lost-stamp-set! ::make-vector-app ::long)
    (inline make-vector-app-value-approx::approx ::make-vector-app)
    (inline make-vector-app-approx::approx ::make-vector-app)
    (inline make-vector-app-approx-set! ::make-vector-app ::approx)
    (inline make-vector-app-stackable::obj ::make-vector-app)
    (inline make-vector-app-stackable-set! ::make-vector-app ::obj)
    (inline make-vector-app-args::obj ::make-vector-app)
    (inline make-vector-app-args-set! ::make-vector-app ::obj)
    (inline make-vector-app-fun::var ::make-vector-app)
    (inline make-vector-app-fun-set! ::make-vector-app ::var)
    (inline make-vector-app-key::obj ::make-vector-app)
    (inline make-vector-app-key-set! ::make-vector-app ::obj)
    (inline make-vector-app-side-effect::obj ::make-vector-app)
    (inline make-vector-app-side-effect-set! ::make-vector-app ::obj)
    (inline make-vector-app-type::type ::make-vector-app)
    (inline make-vector-app-type-set! ::make-vector-app ::type)
    (inline make-vector-app-loc::obj ::make-vector-app))))

;; pre-cons-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-cons-app::pre-cons-app loc1585::obj type1586::type side-effect1587::obj key1588::obj fun1589::var args1590::obj stackable1591::obj owner1592::variable)
    (inline pre-cons-app?::bool ::obj)
    (pre-cons-app-nil::pre-cons-app)
    (inline pre-cons-app-owner::variable ::pre-cons-app)
    (inline pre-cons-app-stackable::obj ::pre-cons-app)
    (inline pre-cons-app-stackable-set! ::pre-cons-app ::obj)
    (inline pre-cons-app-args::obj ::pre-cons-app)
    (inline pre-cons-app-args-set! ::pre-cons-app ::obj)
    (inline pre-cons-app-fun::var ::pre-cons-app)
    (inline pre-cons-app-fun-set! ::pre-cons-app ::var)
    (inline pre-cons-app-key::obj ::pre-cons-app)
    (inline pre-cons-app-key-set! ::pre-cons-app ::obj)
    (inline pre-cons-app-side-effect::obj ::pre-cons-app)
    (inline pre-cons-app-side-effect-set! ::pre-cons-app ::obj)
    (inline pre-cons-app-type::type ::pre-cons-app)
    (inline pre-cons-app-type-set! ::pre-cons-app ::type)
    (inline pre-cons-app-loc::obj ::pre-cons-app))))

;; pre-cons-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-cons-ref-app::pre-cons-ref-app loc1575::obj type1576::type side-effect1577::obj key1578::obj fun1579::var args1580::obj stackable1582::obj get1583::procedure)
    (inline pre-cons-ref-app?::bool ::obj)
    (pre-cons-ref-app-nil::pre-cons-ref-app)
    (inline pre-cons-ref-app-get::procedure ::pre-cons-ref-app)
    (inline pre-cons-ref-app-stackable::obj ::pre-cons-ref-app)
    (inline pre-cons-ref-app-stackable-set! ::pre-cons-ref-app ::obj)
    (inline pre-cons-ref-app-args::obj ::pre-cons-ref-app)
    (inline pre-cons-ref-app-args-set! ::pre-cons-ref-app ::obj)
    (inline pre-cons-ref-app-fun::var ::pre-cons-ref-app)
    (inline pre-cons-ref-app-fun-set! ::pre-cons-ref-app ::var)
    (inline pre-cons-ref-app-key::obj ::pre-cons-ref-app)
    (inline pre-cons-ref-app-key-set! ::pre-cons-ref-app ::obj)
    (inline pre-cons-ref-app-side-effect::obj ::pre-cons-ref-app)
    (inline pre-cons-ref-app-side-effect-set! ::pre-cons-ref-app ::obj)
    (inline pre-cons-ref-app-type::type ::pre-cons-ref-app)
    (inline pre-cons-ref-app-type-set! ::pre-cons-ref-app ::type)
    (inline pre-cons-ref-app-loc::obj ::pre-cons-ref-app))))

;; pre-cons-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-cons-set!-app::pre-cons-set!-app loc1566::obj type1567::type side-effect1568::obj key1569::obj fun1570::var args1571::obj stackable1572::obj get1573::procedure)
    (inline pre-cons-set!-app?::bool ::obj)
    (pre-cons-set!-app-nil::pre-cons-set!-app)
    (inline pre-cons-set!-app-get::procedure ::pre-cons-set!-app)
    (inline pre-cons-set!-app-stackable::obj ::pre-cons-set!-app)
    (inline pre-cons-set!-app-stackable-set! ::pre-cons-set!-app ::obj)
    (inline pre-cons-set!-app-args::obj ::pre-cons-set!-app)
    (inline pre-cons-set!-app-args-set! ::pre-cons-set!-app ::obj)
    (inline pre-cons-set!-app-fun::var ::pre-cons-set!-app)
    (inline pre-cons-set!-app-fun-set! ::pre-cons-set!-app ::var)
    (inline pre-cons-set!-app-key::obj ::pre-cons-set!-app)
    (inline pre-cons-set!-app-key-set! ::pre-cons-set!-app ::obj)
    (inline pre-cons-set!-app-side-effect::obj ::pre-cons-set!-app)
    (inline pre-cons-set!-app-side-effect-set! ::pre-cons-set!-app ::obj)
    (inline pre-cons-set!-app-type::type ::pre-cons-set!-app)
    (inline pre-cons-set!-app-type-set! ::pre-cons-set!-app ::type)
    (inline pre-cons-set!-app-loc::obj ::pre-cons-set!-app))))

;; cons-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-cons-app::cons-app loc1550::obj type1551::type side-effect1552::obj key1553::obj fun1554::var args1555::obj stackable1556::obj approx1557::approx approxes1558::pair lost-stamp1559::long owner1560::variable stack-stamp1561::obj seen?1562::bool)
    (inline cons-app?::bool ::obj)
    (cons-app-nil::cons-app)
    (inline cons-app-seen?::bool ::cons-app)
    (inline cons-app-seen?-set! ::cons-app ::bool)
    (inline cons-app-stack-stamp::obj ::cons-app)
    (inline cons-app-stack-stamp-set! ::cons-app ::obj)
    (inline cons-app-owner::variable ::cons-app)
    (inline cons-app-lost-stamp::long ::cons-app)
    (inline cons-app-lost-stamp-set! ::cons-app ::long)
    (inline cons-app-approxes::pair ::cons-app)
    (inline cons-app-approx::approx ::cons-app)
    (inline cons-app-approx-set! ::cons-app ::approx)
    (inline cons-app-stackable::obj ::cons-app)
    (inline cons-app-stackable-set! ::cons-app ::obj)
    (inline cons-app-args::obj ::cons-app)
    (inline cons-app-args-set! ::cons-app ::obj)
    (inline cons-app-fun::var ::cons-app)
    (inline cons-app-fun-set! ::cons-app ::var)
    (inline cons-app-key::obj ::cons-app)
    (inline cons-app-key-set! ::cons-app ::obj)
    (inline cons-app-side-effect::obj ::cons-app)
    (inline cons-app-side-effect-set! ::cons-app ::obj)
    (inline cons-app-type::type ::cons-app)
    (inline cons-app-type-set! ::cons-app ::type)
    (inline cons-app-loc::obj ::cons-app))))

;; cons-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-cons-ref-app::cons-ref-app loc1540::obj type1541::type side-effect1542::obj key1543::obj fun1544::var args1545::obj stackable1546::obj approx1547::approx get1548::procedure)
    (inline cons-ref-app?::bool ::obj)
    (cons-ref-app-nil::cons-ref-app)
    (inline cons-ref-app-get::procedure ::cons-ref-app)
    (inline cons-ref-app-approx::approx ::cons-ref-app)
    (inline cons-ref-app-stackable::obj ::cons-ref-app)
    (inline cons-ref-app-stackable-set! ::cons-ref-app ::obj)
    (inline cons-ref-app-args::obj ::cons-ref-app)
    (inline cons-ref-app-args-set! ::cons-ref-app ::obj)
    (inline cons-ref-app-fun::var ::cons-ref-app)
    (inline cons-ref-app-fun-set! ::cons-ref-app ::var)
    (inline cons-ref-app-key::obj ::cons-ref-app)
    (inline cons-ref-app-key-set! ::cons-ref-app ::obj)
    (inline cons-ref-app-side-effect::obj ::cons-ref-app)
    (inline cons-ref-app-side-effect-set! ::cons-ref-app ::obj)
    (inline cons-ref-app-type::type ::cons-ref-app)
    (inline cons-ref-app-type-set! ::cons-ref-app ::type)
    (inline cons-ref-app-loc::obj ::cons-ref-app))))

;; cons-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-cons-set!-app::cons-set!-app loc1530::obj type1531::type side-effect1532::obj key1533::obj fun1534::var args1535::obj stackable1536::obj approx1537::approx get1538::procedure)
    (inline cons-set!-app?::bool ::obj)
    (cons-set!-app-nil::cons-set!-app)
    (inline cons-set!-app-get::procedure ::cons-set!-app)
    (inline cons-set!-app-approx::approx ::cons-set!-app)
    (inline cons-set!-app-stackable::obj ::cons-set!-app)
    (inline cons-set!-app-stackable-set! ::cons-set!-app ::obj)
    (inline cons-set!-app-args::obj ::cons-set!-app)
    (inline cons-set!-app-args-set! ::cons-set!-app ::obj)
    (inline cons-set!-app-fun::var ::cons-set!-app)
    (inline cons-set!-app-fun-set! ::cons-set!-app ::var)
    (inline cons-set!-app-key::obj ::cons-set!-app)
    (inline cons-set!-app-key-set! ::cons-set!-app ::obj)
    (inline cons-set!-app-side-effect::obj ::cons-set!-app)
    (inline cons-set!-app-side-effect-set! ::cons-set!-app ::obj)
    (inline cons-set!-app-type::type ::cons-set!-app)
    (inline cons-set!-app-type-set! ::cons-set!-app ::type)
    (inline cons-set!-app-loc::obj ::cons-set!-app))))

;; pre-make-struct-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-make-struct-app::pre-make-struct-app loc1521::obj type1522::type side-effect1523::obj key1524::obj fun1525::var args1526::obj stackable1527::obj owner1528::variable)
    (inline pre-make-struct-app?::bool ::obj)
    (pre-make-struct-app-nil::pre-make-struct-app)
    (inline pre-make-struct-app-owner::variable ::pre-make-struct-app)
    (inline pre-make-struct-app-stackable::obj ::pre-make-struct-app)
    (inline pre-make-struct-app-stackable-set! ::pre-make-struct-app ::obj)
    (inline pre-make-struct-app-args::obj ::pre-make-struct-app)
    (inline pre-make-struct-app-args-set! ::pre-make-struct-app ::obj)
    (inline pre-make-struct-app-fun::var ::pre-make-struct-app)
    (inline pre-make-struct-app-fun-set! ::pre-make-struct-app ::var)
    (inline pre-make-struct-app-key::obj ::pre-make-struct-app)
    (inline pre-make-struct-app-key-set! ::pre-make-struct-app ::obj)
    (inline pre-make-struct-app-side-effect::obj ::pre-make-struct-app)
    (inline pre-make-struct-app-side-effect-set! ::pre-make-struct-app ::obj)
    (inline pre-make-struct-app-type::type ::pre-make-struct-app)
    (inline pre-make-struct-app-type-set! ::pre-make-struct-app ::type)
    (inline pre-make-struct-app-loc::obj ::pre-make-struct-app))))

;; pre-struct-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-struct-ref-app::pre-struct-ref-app loc1512::obj type1513::type side-effect1514::obj key1515::obj fun1517::var args1518::obj stackable1519::obj)
    (inline pre-struct-ref-app?::bool ::obj)
    (pre-struct-ref-app-nil::pre-struct-ref-app)
    (inline pre-struct-ref-app-stackable::obj ::pre-struct-ref-app)
    (inline pre-struct-ref-app-stackable-set! ::pre-struct-ref-app ::obj)
    (inline pre-struct-ref-app-args::obj ::pre-struct-ref-app)
    (inline pre-struct-ref-app-args-set! ::pre-struct-ref-app ::obj)
    (inline pre-struct-ref-app-fun::var ::pre-struct-ref-app)
    (inline pre-struct-ref-app-fun-set! ::pre-struct-ref-app ::var)
    (inline pre-struct-ref-app-key::obj ::pre-struct-ref-app)
    (inline pre-struct-ref-app-key-set! ::pre-struct-ref-app ::obj)
    (inline pre-struct-ref-app-side-effect::obj ::pre-struct-ref-app)
    (inline pre-struct-ref-app-side-effect-set! ::pre-struct-ref-app ::obj)
    (inline pre-struct-ref-app-type::type ::pre-struct-ref-app)
    (inline pre-struct-ref-app-type-set! ::pre-struct-ref-app ::type)
    (inline pre-struct-ref-app-loc::obj ::pre-struct-ref-app))))

;; pre-struct-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-struct-set!-app::pre-struct-set!-app loc1504::obj type1505::type side-effect1506::obj key1507::obj fun1508::var args1509::obj stackable1510::obj)
    (inline pre-struct-set!-app?::bool ::obj)
    (pre-struct-set!-app-nil::pre-struct-set!-app)
    (inline pre-struct-set!-app-stackable::obj ::pre-struct-set!-app)
    (inline pre-struct-set!-app-stackable-set! ::pre-struct-set!-app ::obj)
    (inline pre-struct-set!-app-args::obj ::pre-struct-set!-app)
    (inline pre-struct-set!-app-args-set! ::pre-struct-set!-app ::obj)
    (inline pre-struct-set!-app-fun::var ::pre-struct-set!-app)
    (inline pre-struct-set!-app-fun-set! ::pre-struct-set!-app ::var)
    (inline pre-struct-set!-app-key::obj ::pre-struct-set!-app)
    (inline pre-struct-set!-app-key-set! ::pre-struct-set!-app ::obj)
    (inline pre-struct-set!-app-side-effect::obj ::pre-struct-set!-app)
    (inline pre-struct-set!-app-side-effect-set! ::pre-struct-set!-app ::obj)
    (inline pre-struct-set!-app-type::type ::pre-struct-set!-app)
    (inline pre-struct-set!-app-type-set! ::pre-struct-set!-app ::type)
    (inline pre-struct-set!-app-loc::obj ::pre-struct-set!-app))))

;; make-struct-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-make-struct-app::make-struct-app loc1490::obj type1491::type side-effect1492::obj key1493::obj fun1494::var args1495::obj stackable1496::obj approx1498::approx value-approx1499::approx lost-stamp1500::long owner1501::variable stack-stamp1502::obj)
    (inline make-struct-app?::bool ::obj)
    (make-struct-app-nil::make-struct-app)
    (inline make-struct-app-stack-stamp::obj ::make-struct-app)
    (inline make-struct-app-stack-stamp-set! ::make-struct-app ::obj)
    (inline make-struct-app-owner::variable ::make-struct-app)
    (inline make-struct-app-lost-stamp::long ::make-struct-app)
    (inline make-struct-app-lost-stamp-set! ::make-struct-app ::long)
    (inline make-struct-app-value-approx::approx ::make-struct-app)
    (inline make-struct-app-approx::approx ::make-struct-app)
    (inline make-struct-app-approx-set! ::make-struct-app ::approx)
    (inline make-struct-app-stackable::obj ::make-struct-app)
    (inline make-struct-app-stackable-set! ::make-struct-app ::obj)
    (inline make-struct-app-args::obj ::make-struct-app)
    (inline make-struct-app-args-set! ::make-struct-app ::obj)
    (inline make-struct-app-fun::var ::make-struct-app)
    (inline make-struct-app-fun-set! ::make-struct-app ::var)
    (inline make-struct-app-key::obj ::make-struct-app)
    (inline make-struct-app-key-set! ::make-struct-app ::obj)
    (inline make-struct-app-side-effect::obj ::make-struct-app)
    (inline make-struct-app-side-effect-set! ::make-struct-app ::obj)
    (inline make-struct-app-type::type ::make-struct-app)
    (inline make-struct-app-type-set! ::make-struct-app ::type)
    (inline make-struct-app-loc::obj ::make-struct-app))))

;; struct-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-struct-ref-app::struct-ref-app loc1481::obj type1482::type side-effect1483::obj key1484::obj fun1485::var args1486::obj stackable1487::obj approx1488::approx)
    (inline struct-ref-app?::bool ::obj)
    (struct-ref-app-nil::struct-ref-app)
    (inline struct-ref-app-approx::approx ::struct-ref-app)
    (inline struct-ref-app-stackable::obj ::struct-ref-app)
    (inline struct-ref-app-stackable-set! ::struct-ref-app ::obj)
    (inline struct-ref-app-args::obj ::struct-ref-app)
    (inline struct-ref-app-args-set! ::struct-ref-app ::obj)
    (inline struct-ref-app-fun::var ::struct-ref-app)
    (inline struct-ref-app-fun-set! ::struct-ref-app ::var)
    (inline struct-ref-app-key::obj ::struct-ref-app)
    (inline struct-ref-app-key-set! ::struct-ref-app ::obj)
    (inline struct-ref-app-side-effect::obj ::struct-ref-app)
    (inline struct-ref-app-side-effect-set! ::struct-ref-app ::obj)
    (inline struct-ref-app-type::type ::struct-ref-app)
    (inline struct-ref-app-type-set! ::struct-ref-app ::type)
    (inline struct-ref-app-loc::obj ::struct-ref-app))))

;; struct-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-struct-set!-app::struct-set!-app loc1471::obj type1472::type side-effect1473::obj key1474::obj fun1475::var args1476::obj stackable1477::obj approx1478::approx)
    (inline struct-set!-app?::bool ::obj)
    (struct-set!-app-nil::struct-set!-app)
    (inline struct-set!-app-approx::approx ::struct-set!-app)
    (inline struct-set!-app-stackable::obj ::struct-set!-app)
    (inline struct-set!-app-stackable-set! ::struct-set!-app ::obj)
    (inline struct-set!-app-args::obj ::struct-set!-app)
    (inline struct-set!-app-args-set! ::struct-set!-app ::obj)
    (inline struct-set!-app-fun::var ::struct-set!-app)
    (inline struct-set!-app-fun-set! ::struct-set!-app ::var)
    (inline struct-set!-app-key::obj ::struct-set!-app)
    (inline struct-set!-app-key-set! ::struct-set!-app ::obj)
    (inline struct-set!-app-side-effect::obj ::struct-set!-app)
    (inline struct-set!-app-side-effect-set! ::struct-set!-app ::obj)
    (inline struct-set!-app-type::type ::struct-set!-app)
    (inline struct-set!-app-type-set! ::struct-set!-app ::type)
    (inline struct-set!-app-loc::obj ::struct-set!-app)))))

;; The definitions
(cond-expand (bigloo-class-sans
;; pre-arithmetic-app
(define-inline (make-pre-arithmetic-app::pre-arithmetic-app loc1693::obj type1694::type side-effect1695::obj key1696::obj fun1697::var args1698::obj stackable1699::obj spec-types1700::pair) (instantiate::pre-arithmetic-app (loc loc1693) (type type1694) (side-effect side-effect1695) (key key1696) (fun fun1697) (args args1698) (stackable stackable1699) (spec-types spec-types1700)))
(define-inline (pre-arithmetic-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-arithmetic-app cfa_info2)))
(define (pre-arithmetic-app-nil::pre-arithmetic-app) (class-nil (@ pre-arithmetic-app cfa_info2)))
(define-inline (pre-arithmetic-app-spec-types::pair o::pre-arithmetic-app) (-> |#!bigloo_wallow| o spec-types))
(define-inline (pre-arithmetic-app-spec-types-set! o::pre-arithmetic-app v::pair) (set! (-> |#!bigloo_wallow| o spec-types) v))
(define-inline (pre-arithmetic-app-stackable::obj o::pre-arithmetic-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (pre-arithmetic-app-stackable-set! o::pre-arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (pre-arithmetic-app-args::obj o::pre-arithmetic-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-arithmetic-app-args-set! o::pre-arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-arithmetic-app-fun::var o::pre-arithmetic-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-arithmetic-app-fun-set! o::pre-arithmetic-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-arithmetic-app-key::obj o::pre-arithmetic-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-arithmetic-app-key-set! o::pre-arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-arithmetic-app-side-effect::obj o::pre-arithmetic-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (pre-arithmetic-app-side-effect-set! o::pre-arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (pre-arithmetic-app-type::type o::pre-arithmetic-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-arithmetic-app-type-set! o::pre-arithmetic-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-arithmetic-app-loc::obj o::pre-arithmetic-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-arithmetic-app-loc-set! o::pre-arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; arithmetic-app
(define-inline (make-arithmetic-app::arithmetic-app loc1683::obj type1684::type side-effect1685::obj key1686::obj fun1687::var args1688::obj stackable1689::obj approx1690::approx spec-types1691::pair) (instantiate::arithmetic-app (loc loc1683) (type type1684) (side-effect side-effect1685) (key key1686) (fun fun1687) (args args1688) (stackable stackable1689) (approx approx1690) (spec-types spec-types1691)))
(define-inline (arithmetic-app?::bool obj::obj) ((@ isa? __object) obj (@ arithmetic-app cfa_info2)))
(define (arithmetic-app-nil::arithmetic-app) (class-nil (@ arithmetic-app cfa_info2)))
(define-inline (arithmetic-app-spec-types::pair o::arithmetic-app) (-> |#!bigloo_wallow| o spec-types))
(define-inline (arithmetic-app-spec-types-set! o::arithmetic-app v::pair) (set! (-> |#!bigloo_wallow| o spec-types) v))
(define-inline (arithmetic-app-approx::approx o::arithmetic-app) (-> |#!bigloo_wallow| o approx))
(define-inline (arithmetic-app-approx-set! o::arithmetic-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (arithmetic-app-stackable::obj o::arithmetic-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (arithmetic-app-stackable-set! o::arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (arithmetic-app-args::obj o::arithmetic-app) (-> |#!bigloo_wallow| o args))
(define-inline (arithmetic-app-args-set! o::arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (arithmetic-app-fun::var o::arithmetic-app) (-> |#!bigloo_wallow| o fun))
(define-inline (arithmetic-app-fun-set! o::arithmetic-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (arithmetic-app-key::obj o::arithmetic-app) (-> |#!bigloo_wallow| o key))
(define-inline (arithmetic-app-key-set! o::arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (arithmetic-app-side-effect::obj o::arithmetic-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (arithmetic-app-side-effect-set! o::arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (arithmetic-app-type::type o::arithmetic-app) (-> |#!bigloo_wallow| o type))
(define-inline (arithmetic-app-type-set! o::arithmetic-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (arithmetic-app-loc::obj o::arithmetic-app) (-> |#!bigloo_wallow| o loc))
(define-inline (arithmetic-app-loc-set! o::arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-make-procedure-app
(define-inline (make-pre-make-procedure-app::pre-make-procedure-app loc1674::obj type1675::type side-effect1676::obj key1677::obj fun1678::var args1679::obj stackable1680::obj owner1681::variable) (instantiate::pre-make-procedure-app (loc loc1674) (type type1675) (side-effect side-effect1676) (key key1677) (fun fun1678) (args args1679) (stackable stackable1680) (owner owner1681)))
(define-inline (pre-make-procedure-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-make-procedure-app cfa_info2)))
(define (pre-make-procedure-app-nil::pre-make-procedure-app) (class-nil (@ pre-make-procedure-app cfa_info2)))
(define-inline (pre-make-procedure-app-owner::variable o::pre-make-procedure-app) (-> |#!bigloo_wallow| o owner))
(define-inline (pre-make-procedure-app-owner-set! o::pre-make-procedure-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (pre-make-procedure-app-stackable::obj o::pre-make-procedure-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (pre-make-procedure-app-stackable-set! o::pre-make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (pre-make-procedure-app-args::obj o::pre-make-procedure-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-make-procedure-app-args-set! o::pre-make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-make-procedure-app-fun::var o::pre-make-procedure-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-make-procedure-app-fun-set! o::pre-make-procedure-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-make-procedure-app-key::obj o::pre-make-procedure-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-make-procedure-app-key-set! o::pre-make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-make-procedure-app-side-effect::obj o::pre-make-procedure-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (pre-make-procedure-app-side-effect-set! o::pre-make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (pre-make-procedure-app-type::type o::pre-make-procedure-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-make-procedure-app-type-set! o::pre-make-procedure-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-make-procedure-app-loc::obj o::pre-make-procedure-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-make-procedure-app-loc-set! o::pre-make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-procedure-ref-app
(define-inline (make-pre-procedure-ref-app::pre-procedure-ref-app loc1666::obj type1667::type side-effect1668::obj key1669::obj fun1670::var args1671::obj stackable1672::obj) (instantiate::pre-procedure-ref-app (loc loc1666) (type type1667) (side-effect side-effect1668) (key key1669) (fun fun1670) (args args1671) (stackable stackable1672)))
(define-inline (pre-procedure-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-procedure-ref-app cfa_info2)))
(define (pre-procedure-ref-app-nil::pre-procedure-ref-app) (class-nil (@ pre-procedure-ref-app cfa_info2)))
(define-inline (pre-procedure-ref-app-stackable::obj o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (pre-procedure-ref-app-stackable-set! o::pre-procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (pre-procedure-ref-app-args::obj o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-procedure-ref-app-args-set! o::pre-procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-procedure-ref-app-fun::var o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-procedure-ref-app-fun-set! o::pre-procedure-ref-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-procedure-ref-app-key::obj o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-procedure-ref-app-key-set! o::pre-procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-procedure-ref-app-side-effect::obj o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (pre-procedure-ref-app-side-effect-set! o::pre-procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (pre-procedure-ref-app-type::type o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-procedure-ref-app-type-set! o::pre-procedure-ref-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-procedure-ref-app-loc::obj o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-procedure-ref-app-loc-set! o::pre-procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-procedure-set!-app
(define-inline (make-pre-procedure-set!-app::pre-procedure-set!-app loc1657::obj type1658::type side-effect1659::obj key1660::obj fun1662::var args1663::obj stackable1664::obj) (instantiate::pre-procedure-set!-app (loc loc1657) (type type1658) (side-effect side-effect1659) (key key1660) (fun fun1662) (args args1663) (stackable stackable1664)))
(define-inline (pre-procedure-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-procedure-set!-app cfa_info2)))
(define (pre-procedure-set!-app-nil::pre-procedure-set!-app) (class-nil (@ pre-procedure-set!-app cfa_info2)))
(define-inline (pre-procedure-set!-app-stackable::obj o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (pre-procedure-set!-app-stackable-set! o::pre-procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (pre-procedure-set!-app-args::obj o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-procedure-set!-app-args-set! o::pre-procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-procedure-set!-app-fun::var o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-procedure-set!-app-fun-set! o::pre-procedure-set!-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-procedure-set!-app-key::obj o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-procedure-set!-app-key-set! o::pre-procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-procedure-set!-app-side-effect::obj o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (pre-procedure-set!-app-side-effect-set! o::pre-procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (pre-procedure-set!-app-type::type o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-procedure-set!-app-type-set! o::pre-procedure-set!-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-procedure-set!-app-loc::obj o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-procedure-set!-app-loc-set! o::pre-procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; make-procedure-app
(define-inline (make-make-procedure-app::make-procedure-app loc1641::obj type1642::type side-effect1643::obj key1644::obj fun1645::var args1646::obj stackable1647::obj approx1648::approx values-approx1649::vector lost-stamp1650::long X-T?1651::bool X1652::bool T1653::bool owner1654::variable stack-stamp1655::obj) (instantiate::make-procedure-app (loc loc1641) (type type1642) (side-effect side-effect1643) (key key1644) (fun fun1645) (args args1646) (stackable stackable1647) (approx approx1648) (values-approx values-approx1649) (lost-stamp lost-stamp1650) (X-T? X-T?1651) (X X1652) (T T1653) (owner owner1654) (stack-stamp stack-stamp1655)))
(define-inline (make-procedure-app?::bool obj::obj) ((@ isa? __object) obj (@ make-procedure-app cfa_info2)))
(define (make-procedure-app-nil::make-procedure-app) (class-nil (@ make-procedure-app cfa_info2)))
(define-inline (make-procedure-app-stack-stamp::obj o::make-procedure-app) (-> |#!bigloo_wallow| o stack-stamp))
(define-inline (make-procedure-app-stack-stamp-set! o::make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o stack-stamp) v))
(define-inline (make-procedure-app-owner::variable o::make-procedure-app) (-> |#!bigloo_wallow| o owner))
(define-inline (make-procedure-app-owner-set! o::make-procedure-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (make-procedure-app-T::bool o::make-procedure-app) (-> |#!bigloo_wallow| o T))
(define-inline (make-procedure-app-T-set! o::make-procedure-app v::bool) (set! (-> |#!bigloo_wallow| o T) v))
(define-inline (make-procedure-app-X::bool o::make-procedure-app) (-> |#!bigloo_wallow| o X))
(define-inline (make-procedure-app-X-set! o::make-procedure-app v::bool) (set! (-> |#!bigloo_wallow| o X) v))
(define-inline (make-procedure-app-X-T?::bool o::make-procedure-app) (-> |#!bigloo_wallow| o X-T?))
(define-inline (make-procedure-app-X-T?-set! o::make-procedure-app v::bool) (set! (-> |#!bigloo_wallow| o X-T?) v))
(define-inline (make-procedure-app-lost-stamp::long o::make-procedure-app) (-> |#!bigloo_wallow| o lost-stamp))
(define-inline (make-procedure-app-lost-stamp-set! o::make-procedure-app v::long) (set! (-> |#!bigloo_wallow| o lost-stamp) v))
(define-inline (make-procedure-app-values-approx::vector o::make-procedure-app) (-> |#!bigloo_wallow| o values-approx))
(define-inline (make-procedure-app-values-approx-set! o::make-procedure-app v::vector) (set! (-> |#!bigloo_wallow| o values-approx) v))
(define-inline (make-procedure-app-approx::approx o::make-procedure-app) (-> |#!bigloo_wallow| o approx))
(define-inline (make-procedure-app-approx-set! o::make-procedure-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (make-procedure-app-stackable::obj o::make-procedure-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (make-procedure-app-stackable-set! o::make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (make-procedure-app-args::obj o::make-procedure-app) (-> |#!bigloo_wallow| o args))
(define-inline (make-procedure-app-args-set! o::make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (make-procedure-app-fun::var o::make-procedure-app) (-> |#!bigloo_wallow| o fun))
(define-inline (make-procedure-app-fun-set! o::make-procedure-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (make-procedure-app-key::obj o::make-procedure-app) (-> |#!bigloo_wallow| o key))
(define-inline (make-procedure-app-key-set! o::make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (make-procedure-app-side-effect::obj o::make-procedure-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (make-procedure-app-side-effect-set! o::make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (make-procedure-app-type::type o::make-procedure-app) (-> |#!bigloo_wallow| o type))
(define-inline (make-procedure-app-type-set! o::make-procedure-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (make-procedure-app-loc::obj o::make-procedure-app) (-> |#!bigloo_wallow| o loc))
(define-inline (make-procedure-app-loc-set! o::make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; procedure-ref-app
(define-inline (make-procedure-ref-app::procedure-ref-app loc1630::obj type1631::type side-effect1632::obj key1633::obj fun1634::var args1635::obj stackable1636::obj approx1638::approx) (instantiate::procedure-ref-app (loc loc1630) (type type1631) (side-effect side-effect1632) (key key1633) (fun fun1634) (args args1635) (stackable stackable1636) (approx approx1638)))
(define-inline (procedure-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ procedure-ref-app cfa_info2)))
(define (procedure-ref-app-nil::procedure-ref-app) (class-nil (@ procedure-ref-app cfa_info2)))
(define-inline (procedure-ref-app-approx::approx o::procedure-ref-app) (-> |#!bigloo_wallow| o approx))
(define-inline (procedure-ref-app-approx-set! o::procedure-ref-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (procedure-ref-app-stackable::obj o::procedure-ref-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (procedure-ref-app-stackable-set! o::procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (procedure-ref-app-args::obj o::procedure-ref-app) (-> |#!bigloo_wallow| o args))
(define-inline (procedure-ref-app-args-set! o::procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (procedure-ref-app-fun::var o::procedure-ref-app) (-> |#!bigloo_wallow| o fun))
(define-inline (procedure-ref-app-fun-set! o::procedure-ref-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (procedure-ref-app-key::obj o::procedure-ref-app) (-> |#!bigloo_wallow| o key))
(define-inline (procedure-ref-app-key-set! o::procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (procedure-ref-app-side-effect::obj o::procedure-ref-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (procedure-ref-app-side-effect-set! o::procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (procedure-ref-app-type::type o::procedure-ref-app) (-> |#!bigloo_wallow| o type))
(define-inline (procedure-ref-app-type-set! o::procedure-ref-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (procedure-ref-app-loc::obj o::procedure-ref-app) (-> |#!bigloo_wallow| o loc))
(define-inline (procedure-ref-app-loc-set! o::procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; procedure-set!-app
(define-inline (make-procedure-set!-app::procedure-set!-app loc1620::obj type1621::type side-effect1622::obj key1623::obj fun1624::var args1625::obj stackable1626::obj approx1627::approx vapprox1628::obj) (instantiate::procedure-set!-app (loc loc1620) (type type1621) (side-effect side-effect1622) (key key1623) (fun fun1624) (args args1625) (stackable stackable1626) (approx approx1627) (vapprox vapprox1628)))
(define-inline (procedure-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ procedure-set!-app cfa_info2)))
(define (procedure-set!-app-nil::procedure-set!-app) (class-nil (@ procedure-set!-app cfa_info2)))
(define-inline (procedure-set!-app-vapprox::obj o::procedure-set!-app) (-> |#!bigloo_wallow| o vapprox))
(define-inline (procedure-set!-app-vapprox-set! o::procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o vapprox) v))
(define-inline (procedure-set!-app-approx::approx o::procedure-set!-app) (-> |#!bigloo_wallow| o approx))
(define-inline (procedure-set!-app-approx-set! o::procedure-set!-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (procedure-set!-app-stackable::obj o::procedure-set!-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (procedure-set!-app-stackable-set! o::procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (procedure-set!-app-args::obj o::procedure-set!-app) (-> |#!bigloo_wallow| o args))
(define-inline (procedure-set!-app-args-set! o::procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (procedure-set!-app-fun::var o::procedure-set!-app) (-> |#!bigloo_wallow| o fun))
(define-inline (procedure-set!-app-fun-set! o::procedure-set!-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (procedure-set!-app-key::obj o::procedure-set!-app) (-> |#!bigloo_wallow| o key))
(define-inline (procedure-set!-app-key-set! o::procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (procedure-set!-app-side-effect::obj o::procedure-set!-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (procedure-set!-app-side-effect-set! o::procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (procedure-set!-app-type::type o::procedure-set!-app) (-> |#!bigloo_wallow| o type))
(define-inline (procedure-set!-app-type-set! o::procedure-set!-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (procedure-set!-app-loc::obj o::procedure-set!-app) (-> |#!bigloo_wallow| o loc))
(define-inline (procedure-set!-app-loc-set! o::procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-make-vector-app
(define-inline (make-pre-make-vector-app::pre-make-vector-app loc1611::obj type1612::type side-effect1613::obj key1614::obj fun1615::var args1616::obj stackable1617::obj owner1618::variable) (instantiate::pre-make-vector-app (loc loc1611) (type type1612) (side-effect side-effect1613) (key key1614) (fun fun1615) (args args1616) (stackable stackable1617) (owner owner1618)))
(define-inline (pre-make-vector-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-make-vector-app cfa_info2)))
(define (pre-make-vector-app-nil::pre-make-vector-app) (class-nil (@ pre-make-vector-app cfa_info2)))
(define-inline (pre-make-vector-app-owner::variable o::pre-make-vector-app) (-> |#!bigloo_wallow| o owner))
(define-inline (pre-make-vector-app-owner-set! o::pre-make-vector-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (pre-make-vector-app-stackable::obj o::pre-make-vector-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (pre-make-vector-app-stackable-set! o::pre-make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (pre-make-vector-app-args::obj o::pre-make-vector-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-make-vector-app-args-set! o::pre-make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-make-vector-app-fun::var o::pre-make-vector-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-make-vector-app-fun-set! o::pre-make-vector-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-make-vector-app-key::obj o::pre-make-vector-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-make-vector-app-key-set! o::pre-make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-make-vector-app-side-effect::obj o::pre-make-vector-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (pre-make-vector-app-side-effect-set! o::pre-make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (pre-make-vector-app-type::type o::pre-make-vector-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-make-vector-app-type-set! o::pre-make-vector-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-make-vector-app-loc::obj o::pre-make-vector-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-make-vector-app-loc-set! o::pre-make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; make-vector-app
(define-inline (make-make-vector-app::make-vector-app loc1595::obj type1596::type side-effect1597::obj key1598::obj fun1599::var args1600::obj stackable1602::obj approx1603::approx value-approx1604::approx lost-stamp1605::long owner1606::variable stack-stamp1607::obj seen?1608::bool tvector?1609::bool) (instantiate::make-vector-app (loc loc1595) (type type1596) (side-effect side-effect1597) (key key1598) (fun fun1599) (args args1600) (stackable stackable1602) (approx approx1603) (value-approx value-approx1604) (lost-stamp lost-stamp1605) (owner owner1606) (stack-stamp stack-stamp1607) (seen? seen?1608) (tvector? tvector?1609)))
(define-inline (make-vector-app?::bool obj::obj) ((@ isa? __object) obj (@ make-vector-app cfa_info2)))
(define (make-vector-app-nil::make-vector-app) (class-nil (@ make-vector-app cfa_info2)))
(define-inline (make-vector-app-tvector?::bool o::make-vector-app) (-> |#!bigloo_wallow| o tvector?))
(define-inline (make-vector-app-tvector?-set! o::make-vector-app v::bool) (set! (-> |#!bigloo_wallow| o tvector?) v))
(define-inline (make-vector-app-seen?::bool o::make-vector-app) (-> |#!bigloo_wallow| o seen?))
(define-inline (make-vector-app-seen?-set! o::make-vector-app v::bool) (set! (-> |#!bigloo_wallow| o seen?) v))
(define-inline (make-vector-app-stack-stamp::obj o::make-vector-app) (-> |#!bigloo_wallow| o stack-stamp))
(define-inline (make-vector-app-stack-stamp-set! o::make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o stack-stamp) v))
(define-inline (make-vector-app-owner::variable o::make-vector-app) (-> |#!bigloo_wallow| o owner))
(define-inline (make-vector-app-owner-set! o::make-vector-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (make-vector-app-lost-stamp::long o::make-vector-app) (-> |#!bigloo_wallow| o lost-stamp))
(define-inline (make-vector-app-lost-stamp-set! o::make-vector-app v::long) (set! (-> |#!bigloo_wallow| o lost-stamp) v))
(define-inline (make-vector-app-value-approx::approx o::make-vector-app) (-> |#!bigloo_wallow| o value-approx))
(define-inline (make-vector-app-value-approx-set! o::make-vector-app v::approx) (set! (-> |#!bigloo_wallow| o value-approx) v))
(define-inline (make-vector-app-approx::approx o::make-vector-app) (-> |#!bigloo_wallow| o approx))
(define-inline (make-vector-app-approx-set! o::make-vector-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (make-vector-app-stackable::obj o::make-vector-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (make-vector-app-stackable-set! o::make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (make-vector-app-args::obj o::make-vector-app) (-> |#!bigloo_wallow| o args))
(define-inline (make-vector-app-args-set! o::make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (make-vector-app-fun::var o::make-vector-app) (-> |#!bigloo_wallow| o fun))
(define-inline (make-vector-app-fun-set! o::make-vector-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (make-vector-app-key::obj o::make-vector-app) (-> |#!bigloo_wallow| o key))
(define-inline (make-vector-app-key-set! o::make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (make-vector-app-side-effect::obj o::make-vector-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (make-vector-app-side-effect-set! o::make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (make-vector-app-type::type o::make-vector-app) (-> |#!bigloo_wallow| o type))
(define-inline (make-vector-app-type-set! o::make-vector-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (make-vector-app-loc::obj o::make-vector-app) (-> |#!bigloo_wallow| o loc))
(define-inline (make-vector-app-loc-set! o::make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-cons-app
(define-inline (make-pre-cons-app::pre-cons-app loc1585::obj type1586::type side-effect1587::obj key1588::obj fun1589::var args1590::obj stackable1591::obj owner1592::variable) (instantiate::pre-cons-app (loc loc1585) (type type1586) (side-effect side-effect1587) (key key1588) (fun fun1589) (args args1590) (stackable stackable1591) (owner owner1592)))
(define-inline (pre-cons-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-cons-app cfa_info2)))
(define (pre-cons-app-nil::pre-cons-app) (class-nil (@ pre-cons-app cfa_info2)))
(define-inline (pre-cons-app-owner::variable o::pre-cons-app) (-> |#!bigloo_wallow| o owner))
(define-inline (pre-cons-app-owner-set! o::pre-cons-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (pre-cons-app-stackable::obj o::pre-cons-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (pre-cons-app-stackable-set! o::pre-cons-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (pre-cons-app-args::obj o::pre-cons-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-cons-app-args-set! o::pre-cons-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-cons-app-fun::var o::pre-cons-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-cons-app-fun-set! o::pre-cons-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-cons-app-key::obj o::pre-cons-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-cons-app-key-set! o::pre-cons-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-cons-app-side-effect::obj o::pre-cons-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (pre-cons-app-side-effect-set! o::pre-cons-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (pre-cons-app-type::type o::pre-cons-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-cons-app-type-set! o::pre-cons-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-cons-app-loc::obj o::pre-cons-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-cons-app-loc-set! o::pre-cons-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-cons-ref-app
(define-inline (make-pre-cons-ref-app::pre-cons-ref-app loc1575::obj type1576::type side-effect1577::obj key1578::obj fun1579::var args1580::obj stackable1582::obj get1583::procedure) (instantiate::pre-cons-ref-app (loc loc1575) (type type1576) (side-effect side-effect1577) (key key1578) (fun fun1579) (args args1580) (stackable stackable1582) (get get1583)))
(define-inline (pre-cons-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-cons-ref-app cfa_info2)))
(define (pre-cons-ref-app-nil::pre-cons-ref-app) (class-nil (@ pre-cons-ref-app cfa_info2)))
(define-inline (pre-cons-ref-app-get::procedure o::pre-cons-ref-app) (-> |#!bigloo_wallow| o get))
(define-inline (pre-cons-ref-app-get-set! o::pre-cons-ref-app v::procedure) (set! (-> |#!bigloo_wallow| o get) v))
(define-inline (pre-cons-ref-app-stackable::obj o::pre-cons-ref-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (pre-cons-ref-app-stackable-set! o::pre-cons-ref-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (pre-cons-ref-app-args::obj o::pre-cons-ref-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-cons-ref-app-args-set! o::pre-cons-ref-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-cons-ref-app-fun::var o::pre-cons-ref-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-cons-ref-app-fun-set! o::pre-cons-ref-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-cons-ref-app-key::obj o::pre-cons-ref-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-cons-ref-app-key-set! o::pre-cons-ref-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-cons-ref-app-side-effect::obj o::pre-cons-ref-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (pre-cons-ref-app-side-effect-set! o::pre-cons-ref-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (pre-cons-ref-app-type::type o::pre-cons-ref-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-cons-ref-app-type-set! o::pre-cons-ref-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-cons-ref-app-loc::obj o::pre-cons-ref-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-cons-ref-app-loc-set! o::pre-cons-ref-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-cons-set!-app
(define-inline (make-pre-cons-set!-app::pre-cons-set!-app loc1566::obj type1567::type side-effect1568::obj key1569::obj fun1570::var args1571::obj stackable1572::obj get1573::procedure) (instantiate::pre-cons-set!-app (loc loc1566) (type type1567) (side-effect side-effect1568) (key key1569) (fun fun1570) (args args1571) (stackable stackable1572) (get get1573)))
(define-inline (pre-cons-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-cons-set!-app cfa_info2)))
(define (pre-cons-set!-app-nil::pre-cons-set!-app) (class-nil (@ pre-cons-set!-app cfa_info2)))
(define-inline (pre-cons-set!-app-get::procedure o::pre-cons-set!-app) (-> |#!bigloo_wallow| o get))
(define-inline (pre-cons-set!-app-get-set! o::pre-cons-set!-app v::procedure) (set! (-> |#!bigloo_wallow| o get) v))
(define-inline (pre-cons-set!-app-stackable::obj o::pre-cons-set!-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (pre-cons-set!-app-stackable-set! o::pre-cons-set!-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (pre-cons-set!-app-args::obj o::pre-cons-set!-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-cons-set!-app-args-set! o::pre-cons-set!-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-cons-set!-app-fun::var o::pre-cons-set!-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-cons-set!-app-fun-set! o::pre-cons-set!-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-cons-set!-app-key::obj o::pre-cons-set!-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-cons-set!-app-key-set! o::pre-cons-set!-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-cons-set!-app-side-effect::obj o::pre-cons-set!-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (pre-cons-set!-app-side-effect-set! o::pre-cons-set!-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (pre-cons-set!-app-type::type o::pre-cons-set!-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-cons-set!-app-type-set! o::pre-cons-set!-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-cons-set!-app-loc::obj o::pre-cons-set!-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-cons-set!-app-loc-set! o::pre-cons-set!-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; cons-app
(define-inline (make-cons-app::cons-app loc1550::obj type1551::type side-effect1552::obj key1553::obj fun1554::var args1555::obj stackable1556::obj approx1557::approx approxes1558::pair lost-stamp1559::long owner1560::variable stack-stamp1561::obj seen?1562::bool) (instantiate::cons-app (loc loc1550) (type type1551) (side-effect side-effect1552) (key key1553) (fun fun1554) (args args1555) (stackable stackable1556) (approx approx1557) (approxes approxes1558) (lost-stamp lost-stamp1559) (owner owner1560) (stack-stamp stack-stamp1561) (seen? seen?1562)))
(define-inline (cons-app?::bool obj::obj) ((@ isa? __object) obj (@ cons-app cfa_info2)))
(define (cons-app-nil::cons-app) (class-nil (@ cons-app cfa_info2)))
(define-inline (cons-app-seen?::bool o::cons-app) (-> |#!bigloo_wallow| o seen?))
(define-inline (cons-app-seen?-set! o::cons-app v::bool) (set! (-> |#!bigloo_wallow| o seen?) v))
(define-inline (cons-app-stack-stamp::obj o::cons-app) (-> |#!bigloo_wallow| o stack-stamp))
(define-inline (cons-app-stack-stamp-set! o::cons-app v::obj) (set! (-> |#!bigloo_wallow| o stack-stamp) v))
(define-inline (cons-app-owner::variable o::cons-app) (-> |#!bigloo_wallow| o owner))
(define-inline (cons-app-owner-set! o::cons-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (cons-app-lost-stamp::long o::cons-app) (-> |#!bigloo_wallow| o lost-stamp))
(define-inline (cons-app-lost-stamp-set! o::cons-app v::long) (set! (-> |#!bigloo_wallow| o lost-stamp) v))
(define-inline (cons-app-approxes::pair o::cons-app) (-> |#!bigloo_wallow| o approxes))
(define-inline (cons-app-approxes-set! o::cons-app v::pair) (set! (-> |#!bigloo_wallow| o approxes) v))
(define-inline (cons-app-approx::approx o::cons-app) (-> |#!bigloo_wallow| o approx))
(define-inline (cons-app-approx-set! o::cons-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (cons-app-stackable::obj o::cons-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (cons-app-stackable-set! o::cons-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (cons-app-args::obj o::cons-app) (-> |#!bigloo_wallow| o args))
(define-inline (cons-app-args-set! o::cons-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (cons-app-fun::var o::cons-app) (-> |#!bigloo_wallow| o fun))
(define-inline (cons-app-fun-set! o::cons-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (cons-app-key::obj o::cons-app) (-> |#!bigloo_wallow| o key))
(define-inline (cons-app-key-set! o::cons-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (cons-app-side-effect::obj o::cons-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (cons-app-side-effect-set! o::cons-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (cons-app-type::type o::cons-app) (-> |#!bigloo_wallow| o type))
(define-inline (cons-app-type-set! o::cons-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (cons-app-loc::obj o::cons-app) (-> |#!bigloo_wallow| o loc))
(define-inline (cons-app-loc-set! o::cons-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; cons-ref-app
(define-inline (make-cons-ref-app::cons-ref-app loc1540::obj type1541::type side-effect1542::obj key1543::obj fun1544::var args1545::obj stackable1546::obj approx1547::approx get1548::procedure) (instantiate::cons-ref-app (loc loc1540) (type type1541) (side-effect side-effect1542) (key key1543) (fun fun1544) (args args1545) (stackable stackable1546) (approx approx1547) (get get1548)))
(define-inline (cons-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ cons-ref-app cfa_info2)))
(define (cons-ref-app-nil::cons-ref-app) (class-nil (@ cons-ref-app cfa_info2)))
(define-inline (cons-ref-app-get::procedure o::cons-ref-app) (-> |#!bigloo_wallow| o get))
(define-inline (cons-ref-app-get-set! o::cons-ref-app v::procedure) (set! (-> |#!bigloo_wallow| o get) v))
(define-inline (cons-ref-app-approx::approx o::cons-ref-app) (-> |#!bigloo_wallow| o approx))
(define-inline (cons-ref-app-approx-set! o::cons-ref-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (cons-ref-app-stackable::obj o::cons-ref-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (cons-ref-app-stackable-set! o::cons-ref-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (cons-ref-app-args::obj o::cons-ref-app) (-> |#!bigloo_wallow| o args))
(define-inline (cons-ref-app-args-set! o::cons-ref-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (cons-ref-app-fun::var o::cons-ref-app) (-> |#!bigloo_wallow| o fun))
(define-inline (cons-ref-app-fun-set! o::cons-ref-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (cons-ref-app-key::obj o::cons-ref-app) (-> |#!bigloo_wallow| o key))
(define-inline (cons-ref-app-key-set! o::cons-ref-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (cons-ref-app-side-effect::obj o::cons-ref-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (cons-ref-app-side-effect-set! o::cons-ref-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (cons-ref-app-type::type o::cons-ref-app) (-> |#!bigloo_wallow| o type))
(define-inline (cons-ref-app-type-set! o::cons-ref-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (cons-ref-app-loc::obj o::cons-ref-app) (-> |#!bigloo_wallow| o loc))
(define-inline (cons-ref-app-loc-set! o::cons-ref-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; cons-set!-app
(define-inline (make-cons-set!-app::cons-set!-app loc1530::obj type1531::type side-effect1532::obj key1533::obj fun1534::var args1535::obj stackable1536::obj approx1537::approx get1538::procedure) (instantiate::cons-set!-app (loc loc1530) (type type1531) (side-effect side-effect1532) (key key1533) (fun fun1534) (args args1535) (stackable stackable1536) (approx approx1537) (get get1538)))
(define-inline (cons-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ cons-set!-app cfa_info2)))
(define (cons-set!-app-nil::cons-set!-app) (class-nil (@ cons-set!-app cfa_info2)))
(define-inline (cons-set!-app-get::procedure o::cons-set!-app) (-> |#!bigloo_wallow| o get))
(define-inline (cons-set!-app-get-set! o::cons-set!-app v::procedure) (set! (-> |#!bigloo_wallow| o get) v))
(define-inline (cons-set!-app-approx::approx o::cons-set!-app) (-> |#!bigloo_wallow| o approx))
(define-inline (cons-set!-app-approx-set! o::cons-set!-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (cons-set!-app-stackable::obj o::cons-set!-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (cons-set!-app-stackable-set! o::cons-set!-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (cons-set!-app-args::obj o::cons-set!-app) (-> |#!bigloo_wallow| o args))
(define-inline (cons-set!-app-args-set! o::cons-set!-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (cons-set!-app-fun::var o::cons-set!-app) (-> |#!bigloo_wallow| o fun))
(define-inline (cons-set!-app-fun-set! o::cons-set!-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (cons-set!-app-key::obj o::cons-set!-app) (-> |#!bigloo_wallow| o key))
(define-inline (cons-set!-app-key-set! o::cons-set!-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (cons-set!-app-side-effect::obj o::cons-set!-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (cons-set!-app-side-effect-set! o::cons-set!-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (cons-set!-app-type::type o::cons-set!-app) (-> |#!bigloo_wallow| o type))
(define-inline (cons-set!-app-type-set! o::cons-set!-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (cons-set!-app-loc::obj o::cons-set!-app) (-> |#!bigloo_wallow| o loc))
(define-inline (cons-set!-app-loc-set! o::cons-set!-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-make-struct-app
(define-inline (make-pre-make-struct-app::pre-make-struct-app loc1521::obj type1522::type side-effect1523::obj key1524::obj fun1525::var args1526::obj stackable1527::obj owner1528::variable) (instantiate::pre-make-struct-app (loc loc1521) (type type1522) (side-effect side-effect1523) (key key1524) (fun fun1525) (args args1526) (stackable stackable1527) (owner owner1528)))
(define-inline (pre-make-struct-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-make-struct-app cfa_info2)))
(define (pre-make-struct-app-nil::pre-make-struct-app) (class-nil (@ pre-make-struct-app cfa_info2)))
(define-inline (pre-make-struct-app-owner::variable o::pre-make-struct-app) (-> |#!bigloo_wallow| o owner))
(define-inline (pre-make-struct-app-owner-set! o::pre-make-struct-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (pre-make-struct-app-stackable::obj o::pre-make-struct-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (pre-make-struct-app-stackable-set! o::pre-make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (pre-make-struct-app-args::obj o::pre-make-struct-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-make-struct-app-args-set! o::pre-make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-make-struct-app-fun::var o::pre-make-struct-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-make-struct-app-fun-set! o::pre-make-struct-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-make-struct-app-key::obj o::pre-make-struct-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-make-struct-app-key-set! o::pre-make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-make-struct-app-side-effect::obj o::pre-make-struct-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (pre-make-struct-app-side-effect-set! o::pre-make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (pre-make-struct-app-type::type o::pre-make-struct-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-make-struct-app-type-set! o::pre-make-struct-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-make-struct-app-loc::obj o::pre-make-struct-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-make-struct-app-loc-set! o::pre-make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-struct-ref-app
(define-inline (make-pre-struct-ref-app::pre-struct-ref-app loc1512::obj type1513::type side-effect1514::obj key1515::obj fun1517::var args1518::obj stackable1519::obj) (instantiate::pre-struct-ref-app (loc loc1512) (type type1513) (side-effect side-effect1514) (key key1515) (fun fun1517) (args args1518) (stackable stackable1519)))
(define-inline (pre-struct-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-struct-ref-app cfa_info2)))
(define (pre-struct-ref-app-nil::pre-struct-ref-app) (class-nil (@ pre-struct-ref-app cfa_info2)))
(define-inline (pre-struct-ref-app-stackable::obj o::pre-struct-ref-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (pre-struct-ref-app-stackable-set! o::pre-struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (pre-struct-ref-app-args::obj o::pre-struct-ref-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-struct-ref-app-args-set! o::pre-struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-struct-ref-app-fun::var o::pre-struct-ref-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-struct-ref-app-fun-set! o::pre-struct-ref-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-struct-ref-app-key::obj o::pre-struct-ref-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-struct-ref-app-key-set! o::pre-struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-struct-ref-app-side-effect::obj o::pre-struct-ref-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (pre-struct-ref-app-side-effect-set! o::pre-struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (pre-struct-ref-app-type::type o::pre-struct-ref-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-struct-ref-app-type-set! o::pre-struct-ref-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-struct-ref-app-loc::obj o::pre-struct-ref-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-struct-ref-app-loc-set! o::pre-struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-struct-set!-app
(define-inline (make-pre-struct-set!-app::pre-struct-set!-app loc1504::obj type1505::type side-effect1506::obj key1507::obj fun1508::var args1509::obj stackable1510::obj) (instantiate::pre-struct-set!-app (loc loc1504) (type type1505) (side-effect side-effect1506) (key key1507) (fun fun1508) (args args1509) (stackable stackable1510)))
(define-inline (pre-struct-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-struct-set!-app cfa_info2)))
(define (pre-struct-set!-app-nil::pre-struct-set!-app) (class-nil (@ pre-struct-set!-app cfa_info2)))
(define-inline (pre-struct-set!-app-stackable::obj o::pre-struct-set!-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (pre-struct-set!-app-stackable-set! o::pre-struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (pre-struct-set!-app-args::obj o::pre-struct-set!-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-struct-set!-app-args-set! o::pre-struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-struct-set!-app-fun::var o::pre-struct-set!-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-struct-set!-app-fun-set! o::pre-struct-set!-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-struct-set!-app-key::obj o::pre-struct-set!-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-struct-set!-app-key-set! o::pre-struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-struct-set!-app-side-effect::obj o::pre-struct-set!-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (pre-struct-set!-app-side-effect-set! o::pre-struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (pre-struct-set!-app-type::type o::pre-struct-set!-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-struct-set!-app-type-set! o::pre-struct-set!-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-struct-set!-app-loc::obj o::pre-struct-set!-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-struct-set!-app-loc-set! o::pre-struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; make-struct-app
(define-inline (make-make-struct-app::make-struct-app loc1490::obj type1491::type side-effect1492::obj key1493::obj fun1494::var args1495::obj stackable1496::obj approx1498::approx value-approx1499::approx lost-stamp1500::long owner1501::variable stack-stamp1502::obj) (instantiate::make-struct-app (loc loc1490) (type type1491) (side-effect side-effect1492) (key key1493) (fun fun1494) (args args1495) (stackable stackable1496) (approx approx1498) (value-approx value-approx1499) (lost-stamp lost-stamp1500) (owner owner1501) (stack-stamp stack-stamp1502)))
(define-inline (make-struct-app?::bool obj::obj) ((@ isa? __object) obj (@ make-struct-app cfa_info2)))
(define (make-struct-app-nil::make-struct-app) (class-nil (@ make-struct-app cfa_info2)))
(define-inline (make-struct-app-stack-stamp::obj o::make-struct-app) (-> |#!bigloo_wallow| o stack-stamp))
(define-inline (make-struct-app-stack-stamp-set! o::make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o stack-stamp) v))
(define-inline (make-struct-app-owner::variable o::make-struct-app) (-> |#!bigloo_wallow| o owner))
(define-inline (make-struct-app-owner-set! o::make-struct-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (make-struct-app-lost-stamp::long o::make-struct-app) (-> |#!bigloo_wallow| o lost-stamp))
(define-inline (make-struct-app-lost-stamp-set! o::make-struct-app v::long) (set! (-> |#!bigloo_wallow| o lost-stamp) v))
(define-inline (make-struct-app-value-approx::approx o::make-struct-app) (-> |#!bigloo_wallow| o value-approx))
(define-inline (make-struct-app-value-approx-set! o::make-struct-app v::approx) (set! (-> |#!bigloo_wallow| o value-approx) v))
(define-inline (make-struct-app-approx::approx o::make-struct-app) (-> |#!bigloo_wallow| o approx))
(define-inline (make-struct-app-approx-set! o::make-struct-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (make-struct-app-stackable::obj o::make-struct-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (make-struct-app-stackable-set! o::make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (make-struct-app-args::obj o::make-struct-app) (-> |#!bigloo_wallow| o args))
(define-inline (make-struct-app-args-set! o::make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (make-struct-app-fun::var o::make-struct-app) (-> |#!bigloo_wallow| o fun))
(define-inline (make-struct-app-fun-set! o::make-struct-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (make-struct-app-key::obj o::make-struct-app) (-> |#!bigloo_wallow| o key))
(define-inline (make-struct-app-key-set! o::make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (make-struct-app-side-effect::obj o::make-struct-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (make-struct-app-side-effect-set! o::make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (make-struct-app-type::type o::make-struct-app) (-> |#!bigloo_wallow| o type))
(define-inline (make-struct-app-type-set! o::make-struct-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (make-struct-app-loc::obj o::make-struct-app) (-> |#!bigloo_wallow| o loc))
(define-inline (make-struct-app-loc-set! o::make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; struct-ref-app
(define-inline (make-struct-ref-app::struct-ref-app loc1481::obj type1482::type side-effect1483::obj key1484::obj fun1485::var args1486::obj stackable1487::obj approx1488::approx) (instantiate::struct-ref-app (loc loc1481) (type type1482) (side-effect side-effect1483) (key key1484) (fun fun1485) (args args1486) (stackable stackable1487) (approx approx1488)))
(define-inline (struct-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ struct-ref-app cfa_info2)))
(define (struct-ref-app-nil::struct-ref-app) (class-nil (@ struct-ref-app cfa_info2)))
(define-inline (struct-ref-app-approx::approx o::struct-ref-app) (-> |#!bigloo_wallow| o approx))
(define-inline (struct-ref-app-approx-set! o::struct-ref-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (struct-ref-app-stackable::obj o::struct-ref-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (struct-ref-app-stackable-set! o::struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (struct-ref-app-args::obj o::struct-ref-app) (-> |#!bigloo_wallow| o args))
(define-inline (struct-ref-app-args-set! o::struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (struct-ref-app-fun::var o::struct-ref-app) (-> |#!bigloo_wallow| o fun))
(define-inline (struct-ref-app-fun-set! o::struct-ref-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (struct-ref-app-key::obj o::struct-ref-app) (-> |#!bigloo_wallow| o key))
(define-inline (struct-ref-app-key-set! o::struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (struct-ref-app-side-effect::obj o::struct-ref-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (struct-ref-app-side-effect-set! o::struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (struct-ref-app-type::type o::struct-ref-app) (-> |#!bigloo_wallow| o type))
(define-inline (struct-ref-app-type-set! o::struct-ref-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (struct-ref-app-loc::obj o::struct-ref-app) (-> |#!bigloo_wallow| o loc))
(define-inline (struct-ref-app-loc-set! o::struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; struct-set!-app
(define-inline (make-struct-set!-app::struct-set!-app loc1471::obj type1472::type side-effect1473::obj key1474::obj fun1475::var args1476::obj stackable1477::obj approx1478::approx) (instantiate::struct-set!-app (loc loc1471) (type type1472) (side-effect side-effect1473) (key key1474) (fun fun1475) (args args1476) (stackable stackable1477) (approx approx1478)))
(define-inline (struct-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ struct-set!-app cfa_info2)))
(define (struct-set!-app-nil::struct-set!-app) (class-nil (@ struct-set!-app cfa_info2)))
(define-inline (struct-set!-app-approx::approx o::struct-set!-app) (-> |#!bigloo_wallow| o approx))
(define-inline (struct-set!-app-approx-set! o::struct-set!-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (struct-set!-app-stackable::obj o::struct-set!-app) (-> |#!bigloo_wallow| o stackable))
(define-inline (struct-set!-app-stackable-set! o::struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o stackable) v))
(define-inline (struct-set!-app-args::obj o::struct-set!-app) (-> |#!bigloo_wallow| o args))
(define-inline (struct-set!-app-args-set! o::struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (struct-set!-app-fun::var o::struct-set!-app) (-> |#!bigloo_wallow| o fun))
(define-inline (struct-set!-app-fun-set! o::struct-set!-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (struct-set!-app-key::obj o::struct-set!-app) (-> |#!bigloo_wallow| o key))
(define-inline (struct-set!-app-key-set! o::struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (struct-set!-app-side-effect::obj o::struct-set!-app) (-> |#!bigloo_wallow| o side-effect))
(define-inline (struct-set!-app-side-effect-set! o::struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect) v))
(define-inline (struct-set!-app-type::type o::struct-set!-app) (-> |#!bigloo_wallow| o type))
(define-inline (struct-set!-app-type-set! o::struct-set!-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (struct-set!-app-loc::obj o::struct-set!-app) (-> |#!bigloo_wallow| o loc))
(define-inline (struct-set!-app-loc-set! o::struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))
))
